# Routes


# Home page
GET         /                              controllers.Application.index

# Map static resources from the /public folder to the /assets URL path
GET         /assets/*file                  controllers.Assets.at(path="/public", file)


# Conference interface (no update)
POST        /conferences                   controllers.Conferences.create()
GET         /conferences                   controllers.Conferences.list()
GET         /conferences/:id               controllers.Conferences.get(id: String)
PUT         /conferences/:id               controllers.Conferences.update(id: String)
DELETE      /conferences/:id               controllers.Conferences.delete(id: String)
POST        /conferences/:id/abstracts     controllers.Abstracts.create(id: String)
GET         /conferences/:id/abstracts     controllers.Abstracts.listByConference(id: String)


# Abstract interface
GET         /abstracts/:id                 controllers.Abstracts.get(id: String)
PUT         /abstracts/:id                 controllers.Abstracts.update(id: String)
DELETE      /abstracts/:id                 controllers.Abstracts.delete(id: String)
POST        /abstracts/:id/files           controllers.Files.upload(id: String)
GET         /abstracts/:id/files/:f_id     controllers.Files.download(id: String, f_id: String)
DELETE      /abstracts/:id/files/:f_id     controllers.Files.delete(id: String, f_id: String)

# [...] maybe add more aliases


# Account interface
GET         /user                          controllers.Application.showUserInfo
GET         /user/:id/abstracts            controllers.Abstracts.listByAccount(id: String)
GET         /secret                        controllers.Application.showSecret

# ------ auth routes -----------------------------------------------------------
# Login page
GET         /login                         securesocial.controllers.LoginPage.login
GET         /logout                        securesocial.controllers.LoginPage.logout

# User Registration and password handling
GET         /signup                        securesocial.controllers.Registration.startSignUp
POST        /signup                        securesocial.controllers.Registration.handleStartSignUp
GET         /signup/:token                 securesocial.controllers.Registration.signUp(token)
POST        /signup/:token                 securesocial.controllers.Registration.handleSignUp(token)
GET         /reset                         securesocial.controllers.Registration.startResetPassword
POST        /reset                         securesocial.controllers.Registration.handleStartResetPassword
GET         /reset/:token                  securesocial.controllers.Registration.resetPassword(token)
POST        /reset/:token                  securesocial.controllers.Registration.handleResetPassword(token)
GET         /password                      securesocial.controllers.PasswordChange.page
POST        /password                      securesocial.controllers.PasswordChange.handlePasswordChange

# Providers entry points
GET         /authenticate/:provider        securesocial.controllers.ProviderController.authenticate(provider)
POST        /authenticate/:provider        securesocial.controllers.ProviderController.authenticateByPost(provider)
GET         /not-authorized                securesocial.controllers.ProviderController.notAuthorized